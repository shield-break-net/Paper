From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jake Potrebic <jake.m.potrebic@gmail.com>
Date: Sat, 9 Dec 2023 11:47:53 -0800
Subject: [PATCH] add missing Experimental annotations


diff --git a/src/main/java/org/bukkit/FeatureFlag.java b/src/main/java/org/bukkit/FeatureFlag.java
index 5269df59f0e8099a72c6b628ac1b8c84a0d1a5d5..775fda4b299e1d6dba9b293b2f98505ee65186bb 100644
--- a/src/main/java/org/bukkit/FeatureFlag.java
+++ b/src/main/java/org/bukkit/FeatureFlag.java
@@ -14,6 +14,7 @@ public interface FeatureFlag extends Keyed {
     public static final FeatureFlag VANILLA = Bukkit.getUnsafe().getFeatureFlag(NamespacedKey.minecraft("vanilla"));
 
     @MinecraftExperimental
+    @ApiStatus.Experimental // Paper - add missing annotation
     public static final FeatureFlag BUNDLE = Bukkit.getUnsafe().getFeatureFlag(NamespacedKey.minecraft("bundle"));
 
     /**
@@ -26,8 +27,10 @@ public interface FeatureFlag extends Keyed {
     public static final FeatureFlag UPDATE_1_20 = Bukkit.getUnsafe().getFeatureFlag(NamespacedKey.minecraft("update_1_20"));
 
     @MinecraftExperimental
+    @ApiStatus.Experimental // Paper - add missing annotation
     public static final FeatureFlag TRADE_REBALANCE = Bukkit.getUnsafe().getFeatureFlag(NamespacedKey.minecraft("trade_rebalance"));
 
     @MinecraftExperimental
+    @ApiStatus.Experimental // Paper - add missing annotation
     public static final FeatureFlag UPDATE_121 = Bukkit.getUnsafe().getFeatureFlag(NamespacedKey.minecraft("update_1_21"));
 }
diff --git a/src/main/java/org/bukkit/Material.java b/src/main/java/org/bukkit/Material.java
index 9f86ad25a57b3f6e6bda1ce657833837cb3b2292..f9af60356da4668cec8b24e73f5747ab82e35a91 100644
--- a/src/main/java/org/bukkit/Material.java
+++ b/src/main/java/org/bukkit/Material.java
@@ -144,54 +144,67 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
      * BlockData: {@link Slab}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TUFF_SLAB(19305, Slab.class),
     /**
      * BlockData: {@link Stairs}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TUFF_STAIRS(11268, Stairs.class),
     /**
      * BlockData: {@link Wall}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TUFF_WALL(24395, Wall.class),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     CHISELED_TUFF(15831),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     POLISHED_TUFF(17801),
     /**
      * BlockData: {@link Slab}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     POLISHED_TUFF_SLAB(31096, Slab.class),
     /**
      * BlockData: {@link Stairs}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     POLISHED_TUFF_STAIRS(7964, Stairs.class),
     /**
      * BlockData: {@link Wall}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     POLISHED_TUFF_WALL(28886, Wall.class),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TUFF_BRICKS(26276),
     /**
      * BlockData: {@link Slab}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TUFF_BRICK_SLAB(11843, Slab.class),
     /**
      * BlockData: {@link Stairs}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TUFF_BRICK_STAIRS(30753, Stairs.class),
     /**
      * BlockData: {@link Wall}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TUFF_BRICK_WALL(11761, Wall.class),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     CHISELED_TUFF_BRICKS(8601),
     DRIPSTONE_BLOCK(26227),
     /**
@@ -305,12 +318,16 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
     WEATHERED_COPPER(19699),
     OXIDIZED_COPPER(19490),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     CHISELED_COPPER(12143),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     EXPOSED_CHISELED_COPPER(4570),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WEATHERED_CHISELED_COPPER(30876),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     OXIDIZED_CHISELED_COPPER(27719),
     CUT_COPPER(32519),
     EXPOSED_CUT_COPPER(18000),
@@ -353,12 +370,16 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
     WAXED_WEATHERED_COPPER(5960),
     WAXED_OXIDIZED_COPPER(25626),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_CHISELED_COPPER(7500),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_EXPOSED_CHISELED_COPPER(30658),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_WEATHERED_CHISELED_COPPER(5970),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_OXIDIZED_CHISELED_COPPER(7735),
     WAXED_CUT_COPPER(11030),
     WAXED_EXPOSED_CUT_COPPER(30043),
@@ -2100,41 +2121,49 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
      * BlockData: {@link Door}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     COPPER_DOOR(26809, Door.class),
     /**
      * BlockData: {@link Door}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     EXPOSED_COPPER_DOOR(13236, Door.class),
     /**
      * BlockData: {@link Door}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WEATHERED_COPPER_DOOR(10208, Door.class),
     /**
      * BlockData: {@link Door}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     OXIDIZED_COPPER_DOOR(5348, Door.class),
     /**
      * BlockData: {@link Door}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_COPPER_DOOR(9954, Door.class),
     /**
      * BlockData: {@link Door}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_EXPOSED_COPPER_DOOR(20748, Door.class),
     /**
      * BlockData: {@link Door}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_WEATHERED_COPPER_DOOR(25073, Door.class),
     /**
      * BlockData: {@link Door}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_OXIDIZED_COPPER_DOOR(23888, Door.class),
     /**
      * BlockData: {@link TrapDoor}
@@ -2188,41 +2217,49 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
      * BlockData: {@link TrapDoor}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     COPPER_TRAPDOOR(12110, TrapDoor.class),
     /**
      * BlockData: {@link TrapDoor}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     EXPOSED_COPPER_TRAPDOOR(19219, TrapDoor.class),
     /**
      * BlockData: {@link TrapDoor}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WEATHERED_COPPER_TRAPDOOR(28254, TrapDoor.class),
     /**
      * BlockData: {@link TrapDoor}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     OXIDIZED_COPPER_TRAPDOOR(26518, TrapDoor.class),
     /**
      * BlockData: {@link TrapDoor}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_COPPER_TRAPDOOR(12626, TrapDoor.class),
     /**
      * BlockData: {@link TrapDoor}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_EXPOSED_COPPER_TRAPDOOR(11010, TrapDoor.class),
     /**
      * BlockData: {@link TrapDoor}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_WEATHERED_COPPER_TRAPDOOR(30709, TrapDoor.class),
     /**
      * BlockData: {@link TrapDoor}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_OXIDIZED_COPPER_TRAPDOOR(21450, TrapDoor.class),
     /**
      * BlockData: {@link Gate}
@@ -2628,6 +2665,7 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
      * BlockData: {@link Crafter}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     CRAFTER(25243, Crafter.class),
     FILLED_MAP(23504),
     SHEARS(27971, 1, 238),
@@ -2667,6 +2705,7 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
     BEE_SPAWN_EGG(22924),
     BLAZE_SPAWN_EGG(4759),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BREEZE_SPAWN_EGG(7580),
     CAT_SPAWN_EGG(29583),
     CAMEL_SPAWN_EGG(14760),
@@ -3162,88 +3201,106 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
      * BlockData: {@link Waterlogged}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     COPPER_GRATE(16221, Waterlogged.class),
     /**
      * BlockData: {@link Waterlogged}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     EXPOSED_COPPER_GRATE(7783, Waterlogged.class),
     /**
      * BlockData: {@link Waterlogged}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WEATHERED_COPPER_GRATE(24954, Waterlogged.class),
     /**
      * BlockData: {@link Waterlogged}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     OXIDIZED_COPPER_GRATE(14122, Waterlogged.class),
     /**
      * BlockData: {@link Waterlogged}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_COPPER_GRATE(11230, Waterlogged.class),
     /**
      * BlockData: {@link Waterlogged}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_EXPOSED_COPPER_GRATE(20520, Waterlogged.class),
     /**
      * BlockData: {@link Waterlogged}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_WEATHERED_COPPER_GRATE(16533, Waterlogged.class),
     /**
      * BlockData: {@link Waterlogged}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_OXIDIZED_COPPER_GRATE(32010, Waterlogged.class),
     /**
      * BlockData: {@link CopperBulb}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     COPPER_BULB(21370, CopperBulb.class),
     /**
      * BlockData: {@link CopperBulb}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     EXPOSED_COPPER_BULB(11944, CopperBulb.class),
     /**
      * BlockData: {@link CopperBulb}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WEATHERED_COPPER_BULB(10800, CopperBulb.class),
     /**
      * BlockData: {@link CopperBulb}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     OXIDIZED_COPPER_BULB(22421, CopperBulb.class),
     /**
      * BlockData: {@link CopperBulb}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_COPPER_BULB(23756, CopperBulb.class),
     /**
      * BlockData: {@link CopperBulb}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_EXPOSED_COPPER_BULB(5530, CopperBulb.class),
     /**
      * BlockData: {@link CopperBulb}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_WEATHERED_COPPER_BULB(13239, CopperBulb.class),
     /**
      * BlockData: {@link CopperBulb}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_OXIDIZED_COPPER_BULB(26892, CopperBulb.class),
     /**
      * BlockData: {@link TrialSpawner}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_SPAWNER(19902, TrialSpawner.class),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_KEY(12725),
     /**
      * BlockData: {@link Levelled}
diff --git a/src/main/java/org/bukkit/Particle.java b/src/main/java/org/bukkit/Particle.java
index 0cb15350704955f4a1aeff184a8b60d9a9871ded..594de70f30e292748935f5b1e43a5a7d76bb8ca0 100644
--- a/src/main/java/org/bukkit/Particle.java
+++ b/src/main/java/org/bukkit/Particle.java
@@ -136,12 +136,16 @@ public enum Particle implements Keyed {
     DUST_PLUME("dust_plume"),
     WHITE_SMOKE("white_smoke"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     GUST("gust"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     GUST_EMITTER("gust_emitter"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     GUST_DUST("gust_dust"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_SPAWNER_DETECTION("trial_spawner_detection"),
     /**
      * Uses {@link BlockData} as DataType
diff --git a/src/main/java/org/bukkit/Sound.java b/src/main/java/org/bukkit/Sound.java
index 72ea6ddd00eed73459d700d657929f83ba1ca7ee..bb1b6bc9349af6dec369420035e860921da52589 100644
--- a/src/main/java/org/bukkit/Sound.java
+++ b/src/main/java/org/bukkit/Sound.java
@@ -215,40 +215,56 @@ public enum Sound implements Keyed, net.kyori.adventure.sound.Sound.Type { // Pa
     BLOCK_CONDUIT_DEACTIVATE("block.conduit.deactivate"),
     BLOCK_COPPER_BREAK("block.copper.break"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_BULB_BREAK("block.copper_bulb.break"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_BULB_FALL("block.copper_bulb.fall"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_BULB_HIT("block.copper_bulb.hit"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_BULB_PLACE("block.copper_bulb.place"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_BULB_STEP("block.copper_bulb.step"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_BULB_TURN_OFF("block.copper_bulb.turn_off"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_BULB_TURN_ON("block.copper_bulb.turn_on"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_DOOR_CLOSE("block.copper_door.close"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_DOOR_OPEN("block.copper_door.open"),
     BLOCK_COPPER_FALL("block.copper.fall"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_GRATE_BREAK("block.copper_grate.break"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_GRATE_FALL("block.copper_grate.fall"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_GRATE_HIT("block.copper_grate.hit"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_GRATE_PLACE("block.copper_grate.place"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_GRATE_STEP("block.copper_grate.step"),
     BLOCK_COPPER_HIT("block.copper.hit"),
     BLOCK_COPPER_PLACE("block.copper.place"),
     BLOCK_COPPER_STEP("block.copper.step"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_TRAPDOOR_CLOSE("block.copper_trapdoor.close"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_TRAPDOOR_OPEN("block.copper_trapdoor.open"),
     BLOCK_CORAL_BLOCK_BREAK("block.coral_block.break"),
     BLOCK_CORAL_BLOCK_FALL("block.coral_block.fall"),
@@ -531,14 +547,19 @@ public enum Sound implements Keyed, net.kyori.adventure.sound.Sound.Type { // Pa
     BLOCK_POLISHED_DEEPSLATE_PLACE("block.polished_deepslate.place"),
     BLOCK_POLISHED_DEEPSLATE_STEP("block.polished_deepslate.step"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_POLISHED_TUFF_BREAK("block.polished_tuff.break"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_POLISHED_TUFF_FALL("block.polished_tuff.fall"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_POLISHED_TUFF_HIT("block.polished_tuff.hit"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_POLISHED_TUFF_PLACE("block.polished_tuff.place"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_POLISHED_TUFF_STEP("block.polished_tuff.step"),
     BLOCK_PORTAL_AMBIENT("block.portal.ambient"),
     BLOCK_PORTAL_TRAVEL("block.portal.travel"),
@@ -684,26 +705,37 @@ public enum Sound implements Keyed, net.kyori.adventure.sound.Sound.Type { // Pa
     BLOCK_SWEET_BERRY_BUSH_PICK_BERRIES("block.sweet_berry_bush.pick_berries"),
     BLOCK_SWEET_BERRY_BUSH_PLACE("block.sweet_berry_bush.place"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_AMBIENT("block.trial_spawner.ambient"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_BREAK("block.trial_spawner.break"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_CLOSE_SHUTTER("block.trial_spawner.close_shutter"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_DETECT_PLAYER("block.trial_spawner.detect_player"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_EJECT_ITEM("block.trial_spawner.eject_item"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_FALL("block.trial_spawner.fall"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_HIT("block.trial_spawner.hit"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_OPEN_SHUTTER("block.trial_spawner.open_shutter"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_PLACE("block.trial_spawner.place"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_SPAWN_MOB("block.trial_spawner.spawn_mob"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_STEP("block.trial_spawner.step"),
     BLOCK_TRIPWIRE_ATTACH("block.tripwire.attach"),
     BLOCK_TRIPWIRE_CLICK_OFF("block.tripwire.click_off"),
@@ -711,14 +743,19 @@ public enum Sound implements Keyed, net.kyori.adventure.sound.Sound.Type { // Pa
     BLOCK_TRIPWIRE_DETACH("block.tripwire.detach"),
     BLOCK_TUFF_BREAK("block.tuff.break"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TUFF_BRICKS_BREAK("block.tuff_bricks.break"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TUFF_BRICKS_FALL("block.tuff_bricks.fall"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TUFF_BRICKS_HIT("block.tuff_bricks.hit"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TUFF_BRICKS_PLACE("block.tuff_bricks.place"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TUFF_BRICKS_STEP("block.tuff_bricks.step"),
     BLOCK_TUFF_FALL("block.tuff.fall"),
     BLOCK_TUFF_HIT("block.tuff.hit"),
@@ -809,22 +846,31 @@ public enum Sound implements Keyed, net.kyori.adventure.sound.Sound.Type { // Pa
     ENTITY_BOAT_PADDLE_LAND("entity.boat.paddle_land"),
     ENTITY_BOAT_PADDLE_WATER("entity.boat.paddle_water"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_DEATH("entity.breeze.death"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_HURT("entity.breeze.hurt"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_IDLE_AIR("entity.breeze.idle_air"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_IDLE_GROUND("entity.breeze.idle_ground"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_INHALE("entity.breeze.inhale"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_JUMP("entity.breeze.jump"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_LAND("entity.breeze.land"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_SHOOT("entity.breeze.shoot"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_SLIDE("entity.breeze.slide"),
     ENTITY_CAMEL_AMBIENT("entity.camel.ambient"),
     ENTITY_CAMEL_DASH("entity.camel.dash"),
@@ -971,6 +1017,7 @@ public enum Sound implements Keyed, net.kyori.adventure.sound.Sound.Type { // Pa
     ENTITY_GENERIC_SPLASH("entity.generic.splash"),
     ENTITY_GENERIC_SWIM("entity.generic.swim"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_GENERIC_WIND_BURST("entity.generic.wind_burst"),
     ENTITY_GHAST_AMBIENT("entity.ghast.ambient"),
     ENTITY_GHAST_DEATH("entity.ghast.death"),
@@ -1124,6 +1171,7 @@ public enum Sound implements Keyed, net.kyori.adventure.sound.Sound.Type { // Pa
     ENTITY_PARROT_HURT("entity.parrot.hurt"),
     ENTITY_PARROT_IMITATE_BLAZE("entity.parrot.imitate.blaze"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_PARROT_IMITATE_BREEZE("entity.parrot.imitate.breeze"),
     ENTITY_PARROT_IMITATE_CREEPER("entity.parrot.imitate.creeper"),
     ENTITY_PARROT_IMITATE_DROWNED("entity.parrot.imitate.drowned"),
@@ -1494,10 +1542,13 @@ public enum Sound implements Keyed, net.kyori.adventure.sound.Sound.Type { // Pa
     ITEM_BUCKET_FILL_POWDER_SNOW("item.bucket.fill_powder_snow"),
     ITEM_BUCKET_FILL_TADPOLE("item.bucket.fill_tadpole"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ITEM_BUNDLE_DROP_CONTENTS("item.bundle.drop_contents"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ITEM_BUNDLE_INSERT("item.bundle.insert"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ITEM_BUNDLE_REMOVE_ONE("item.bundle.remove_one"),
     ITEM_CHORUS_FRUIT_TELEPORT("item.chorus_fruit.teleport"),
     ITEM_CROP_PLANT("item.crop.plant"),
diff --git a/src/main/java/org/bukkit/Tag.java b/src/main/java/org/bukkit/Tag.java
index dd509bd1f7e80a04a63d2ba6eca1ff845d12fb2d..8ca9c7c8d0d6138c825d765c270c29bce11fe09e 100644
--- a/src/main/java/org/bukkit/Tag.java
+++ b/src/main/java/org/bukkit/Tag.java
@@ -973,14 +973,17 @@ public interface Tag<T extends Keyed> extends Keyed {
     /**
      * Vanilla tag representing entities which deflect arrows.
      */
+    @org.jetbrains.annotations.ApiStatus.Experimental @MinecraftExperimental // Paper - add missing annotation
     Tag<EntityType> ENTITY_TYPES_DEFLECTS_ARROWS = Bukkit.getTag(REGISTRY_ENTITY_TYPES, NamespacedKey.minecraft("deflects_arrows"), EntityType.class);
     /**
      * Vanilla tag representing entities which deflect tridents.
      */
+    @org.jetbrains.annotations.ApiStatus.Experimental @MinecraftExperimental // Paper - add missing annotation
     Tag<EntityType> ENTITY_TYPES_DEFLECTS_TRIDENTS = Bukkit.getTag(REGISTRY_ENTITY_TYPES, NamespacedKey.minecraft("deflects_tridents"), EntityType.class);
     /**
      * Vanilla tag representing entities which can turn in boats.
      */
+    @org.jetbrains.annotations.ApiStatus.Experimental @MinecraftExperimental // Paper - add missing annotation
     Tag<EntityType> ENTITY_TYPES_CAN_TURN_IN_BOATS = Bukkit.getTag(REGISTRY_ENTITY_TYPES, NamespacedKey.minecraft("can_turn_in_boats"), EntityType.class);
 
     // Paper start
diff --git a/src/main/java/org/bukkit/generator/structure/Structure.java b/src/main/java/org/bukkit/generator/structure/Structure.java
index 65d3d8fd5f00114dc388d65321a9affe1b32ce20..8e39f282c771ddafe5d890dcf065c56f0c633647 100644
--- a/src/main/java/org/bukkit/generator/structure/Structure.java
+++ b/src/main/java/org/bukkit/generator/structure/Structure.java
@@ -49,6 +49,7 @@ public abstract class Structure implements Keyed {
     public static final Structure ANCIENT_CITY = getStructure("ancient_city");
     public static final Structure TRAIL_RUINS = getStructure("trail_ruins");
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     public static final Structure TRIAL_CHAMBERS = getStructure("trial_chambers");
 
     private static Structure getStructure(String name) {
diff --git a/src/main/java/org/bukkit/loot/LootTables.java b/src/main/java/org/bukkit/loot/LootTables.java
index d87214444118f57dad31898cf776b9e4a368d11d..b3fcb501e69136df73943e1752df41a477111d59 100644
--- a/src/main/java/org/bukkit/loot/LootTables.java
+++ b/src/main/java/org/bukkit/loot/LootTables.java
@@ -35,24 +35,34 @@ public enum LootTables implements Keyed {
     ANCIENT_CITY_ICE_BOX("chests/ancient_city_ice_box"),
     RUINED_PORTAL("chests/ruined_portal"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_REWARD("chests/trial_chambers/reward"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_SUPPLY("chests/trial_chambers/supply"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_CORRIDOR("chests/trial_chambers/corridor"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_INTERSECTION("chests/trial_chambers/intersection"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_INTERSECTION_BARREL("chests/trial_chambers/intersection_barrel"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_ENTRANCE("chests/trial_chambers/entrance"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_CORRIDOR_DISPENSER("dispensers/trial_chambers/corridor"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_CHAMBER_DISPENSER("dispensers/trial_chambers/chamber"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_WATER_DISPENSER("dispensers/trial_chambers/water"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_CORRIDOR_POT("pots/trial_chambers/corridor"),
     SHIPWRECK_MAP("chests/shipwreck_map"),
     SHIPWRECK_SUPPLY("chests/shipwreck_supply"),
